/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.ui.labeling;

import com.google.inject.Inject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.xtext.example.mydsl.myDsl.Branch;
import org.xtext.example.mydsl.myDsl.BranchRotation;
import org.xtext.example.mydsl.myDsl.GroundFruit;
import org.xtext.example.mydsl.myDsl.Leaves;
import org.xtext.example.mydsl.myDsl.LeavesFruit;
import org.xtext.example.mydsl.myDsl.LeavesRotation;
import org.xtext.example.mydsl.myDsl.Tree;
import org.xtext.example.mydsl.myDsl.Value;

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#label-provider
 */
public class MyDslLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public MyDslLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	
//	String text(Greeting ele) {
//		return "A greeting to " + ele.getName();
//	}
//
//	String image(Greeting ele) {
//		return "Greeting.gif";
//	}
	
	String text(Tree tree) {
		return "tree " + tree.getId();
	}
	
	String text(Branch branch) {
		return "branch";
	}
	
	String text(Leaves leaves) {
		return "leaves " + leaves.getEnableDisableLeaves();
	}
	
	String text(LeavesFruit leavesFruit) {
		return "leaves fruit " + leavesFruit.getEnableDisableFruit();
	}

	String text(GroundFruit groundFruit) {
		return "ground fruit " + groundFruit.getEnableDisableGroundFruit();
	}
	
	String text(LeavesRotation leavesRotation) {
		return "leaves rotation";
	}
	
	String text(BranchRotation branchRotation) {
		return "branch rotation";
	}
	
	String text(Value minMaxValue) {
		return "min max value";
	}
}
