/*
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

/**
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#content-assist
 * on how to customize the content assistant.
 */
public class MyDslProposalProvider extends AbstractMyDslProposalProvider {
	
	@Override
	public void complete_MinMax(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_Model(model, ruleCall, context, acceptor);
		
		String proposal = ": min '0' max '0'";
		
		acceptor.accept(createCompletionProposal(proposal, context));
	}
	
	@Override
	public void complete_Type(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_Model(model, ruleCall, context, acceptor);
		
		String proposal_apple = "apple";
		String proposal_coconut = "coconut";
		String proposal_fir = "fir";
		
		acceptor.accept(createCompletionProposal(proposal_apple, context));
		acceptor.accept(createCompletionProposal(proposal_coconut, context));
		acceptor.accept(createCompletionProposal(proposal_fir, context));
	}
	
	@Override
	public void complete_GroundFruit(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		super.complete_Model(model, ruleCall, context, acceptor);
		
		String proposal_enable = "enable";
		String proposal_disable = "disable";
		
		acceptor.accept(createCompletionProposal(proposal_enable, context));
		acceptor.accept(createCompletionProposal(proposal_disable, context));
	}

		
}
